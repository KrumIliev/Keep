<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_wall</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Add the rest of the walls 

var target = instance_place(x, y, obj_wall);
var wall = noone;
var ground = noone;
var index_top = 0;
var index_bottom = 0;

if (instance_exists(target) &amp;&amp; 
    (target.image_index == 1 
    || target.image_index == 10 
    || target.image_index == 11)) {
    
    // Check if its a corner or middle tile
    if (place_meeting(x - 32, y, obj_floor)) {
        index_top = 13;
        index_bottom = 16;
        
    } else if (place_meeting(x + 32, y, obj_floor)) {
        index_top = 15;
        index_bottom = 18;
        
    } else {
        index_top = 14;
        index_bottom = 17;
    }
    
    // Remove ground objects below
    ground = instance_place(x, y + 32, obj_floor);
    with (ground) {
        instance_destroy();
    }
        
    ground = instance_place(x, y + 64, obj_floor);
    with (ground) {
        instance_destroy();
    }
        
    // Add the walls
    wall = scr_create_wall(x, y + 32, obj_level_generator.t_set);
    wall.image_index = index_top;
        
    wall = scr_create_wall(x, y + 64, obj_level_generator.t_set);
    wall.image_index = index_bottom;
}

if (x &gt;= room_width) { 
    y += 32; 
    x = 0; 
} else {
    x += 32;
}

if (y  &gt; room_height) {
    scr_add_portals();
    scr_add_player();
    scr_print_grid(obj_level_generator.level, obj_level_generator.objects);
    room_speed = 60;
    instance_create(0, 0, obj_enemy_spawn_timer);
    instance_destroy();
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
